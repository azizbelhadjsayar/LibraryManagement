/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package biblio;

import Entities.Account;
import Services.AccountService.Row;
import Entities.BookItem;
import Services.AccountService;
import Services.BookItemService;
import Services.BookLendingService;
import Services.BookService;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Barcode.Barcode_Scanner;
import Services.AuthorService;
import Services.LibraryCardService;
import static java.lang.Thread.sleep;
import java.util.concurrent.CompletableFuture;

/**
 *
 * @author LENOVO
 */
public class BookLending extends javax.swing.JFrame {

    /**
     * Creates new form BookLending
     */
    public BookLending() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        daysINPUT = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        usernameFilter = new javax.swing.JTextField();
        emailFilter = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        membersTAB = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        memberID = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        barcodeFilter = new javax.swing.JTextField();
        titleFilter = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTAB = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        barcodeITEM = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CONFIRM");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 204));
        jLabel8.setText("    NEW LENDING    ");
        jLabel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 3, true));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/biblio/assets/back.png"))); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/biblio/assets/close.png"))); // NOI18N
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 204, 0), 5, true), "HOW MANY DAYS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 153, 51))); // NOI18N

        daysINPUT.setBackground(new java.awt.Color(231, 231, 231));
        daysINPUT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        daysINPUT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        daysINPUT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                daysINPUTKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(daysINPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(daysINPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(235, 230, 230));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "ACCOUNTS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(0, 102, 51))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(204, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("USERNAME");

        usernameFilter.setBackground(new java.awt.Color(204, 255, 204));
        usernameFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameFilterKeyReleased(evt);
            }
        });

        emailFilter.setBackground(new java.awt.Color(204, 255, 204));
        emailFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailFilterKeyReleased(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(204, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("EMAIL");

        membersTAB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "USERNAME", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membersTAB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membersTABMouseClicked(evt);
            }
        });
        membersTAB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                membersTABKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(membersTAB);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 255), 5, true), "MEMBER ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 153, 255))); // NOI18N

        memberID.setEditable(false);
        memberID.setBackground(new java.awt.Color(255, 204, 204));
        memberID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        memberID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton3.setBackground(new java.awt.Color(255, 51, 102));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("SCAN CARD");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), null, new java.awt.Color(153, 153, 153), java.awt.Color.white));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(memberID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(memberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(usernameFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(emailFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(235, 230, 230));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "BOOK ITEMS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel4.setBackground(new java.awt.Color(204, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BARCODE");

        barcodeFilter.setBackground(new java.awt.Color(204, 255, 255));
        barcodeFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barcodeFilterKeyReleased(evt);
            }
        });

        titleFilter.setBackground(new java.awt.Color(204, 255, 255));
        titleFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titleFilterKeyReleased(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(204, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TITLE");

        itemsTAB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BARCODE", "TITLE", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTAB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTABMouseClicked(evt);
            }
        });
        itemsTAB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsTABKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(itemsTAB);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 255), 5, true), "BOOK ITEM BARCODE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(0, 153, 255))); // NOI18N

        barcodeITEM.setEditable(false);
        barcodeITEM.setBackground(new java.awt.Color(255, 204, 204));
        barcodeITEM.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        barcodeITEM.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton4.setBackground(new java.awt.Color(255, 51, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SCAN BOOK BARCODE");
        jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(barcodeITEM, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barcodeITEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addComponent(barcodeFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(14, 14, 14))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28))
                    .addComponent(barcodeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(204, 204, 204)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel19)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(298, 298, 298)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 25, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel19))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            AccountService AS = new AccountService();
            ArrayList<Account> members = AS.getAllMembers();
            if(members!=null) {
                for(int i=0; i<members.size();i++) {
                    String id = String.valueOf(members.get(i).getId());
                    String username = members.get(i).getUsername();
                    String email = members.get(i).getEmail();
                    String tabData[] = {id,username,email};
                    DefaultTableModel tblModel = (DefaultTableModel) membersTAB.getModel();
                    tblModel.addRow(tabData);
                }
            }
            
            BookItemService BIS = new BookItemService();
            BookService BS = new BookService();
            ArrayList<BookItem> items = BIS.getAllBookItems();
            if(items!=null) {
                for(int i=0; i<items.size();i++) {
                    String title = BS.searchTitleByISBN(items.get(i).getBookISBN());
                    String barcode = items.get(i).getBarcode();
                    Boolean status = items.get(i).getStatus();
                    String available = "NOT AVAILABLE";
                    if (!status) available = "AVAILABLE";
                    String tabData[] = {barcode,title,available};
                    DefaultTableModel tblModel = (DefaultTableModel) itemsTAB.getModel();
                    tblModel.addRow(tabData);
                }
            }
        }
        catch(Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    public void AccountScanned(Row account){
        try{
            DefaultTableModel model = (DefaultTableModel)membersTAB.getModel();
            model.setRowCount(0);
            Object rowData[] = new Object[3];
            rowData[0] = account.id();
            rowData[1] = account.username();
            rowData[2] = account.email();
            model.addRow(rowData);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    
    public void BookItemScanned(String barcode, String title, String status){
        try{
            DefaultTableModel model = (DefaultTableModel)itemsTAB.getModel();
            model.setRowCount(0);
            Object rowData[] = new Object[3];
            rowData[0] = barcode;
            rowData[1] = title;
            rowData[2] = status;
            model.addRow(rowData);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    
    
    private void membersTABMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membersTABMouseClicked
        // TODO add your handling code here:
        int row = membersTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)membersTAB.getModel();
        memberID.setText(model.getValueAt(row, 0).toString());
    }//GEN-LAST:event_membersTABMouseClicked

    private void usernameFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameFilterKeyReleased

        try {
            membersTAB.setModel(new DefaultTableModel(null,new String[]{"ID","USERNAME","EMAIL"}));
            DefaultTableModel tblModel = (DefaultTableModel) membersTAB.getModel();
            AccountService AS = new AccountService();
            ArrayList<Account> members = AS.searchAccountByUsername(usernameFilter.getText());
                for(int i=0; i<members.size();i++) {
                    String id = String.valueOf(members.get(i).getId());
                    String username = members.get(i).getUsername();
                    String email = members.get(i).getEmail();
                    String tabData[] = {id,username,email};
                    tblModel.addRow(tabData);
                }
        }
        catch(Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_usernameFilterKeyReleased

    private void emailFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailFilterKeyReleased
        // TODO add your handling code here:
        try {
            membersTAB.setModel(new DefaultTableModel(null,new String[]{"ID","USERNAME","EMAIL"}));
            DefaultTableModel tblModel = (DefaultTableModel) membersTAB.getModel();
            AccountService AS = new AccountService();
            ArrayList<Account> members = AS.searchAccountByEmail(emailFilter.getText());
                for(int i=0; i<members.size();i++) {
                    String id = String.valueOf(members.get(i).getId());
                    String username = members.get(i).getUsername();
                    String email = members.get(i).getEmail();
                    String tabData[] = {id,username,email};
                    tblModel.addRow(tabData);
                }
        }
        catch(Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_emailFilterKeyReleased

    private void barcodeFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeFilterKeyReleased
        // TODO add your handling code here:
        itemsTAB.setModel(new DefaultTableModel(null,new String[]{"BARCODE","TITLE","STATUS"}));
        BookItemService BIS = new BookItemService();
        BookService BS = new BookService();
        ArrayList<BookItem> items = BIS.searchBookItemsbyBarcode(barcodeFilter.getText());
        if(items!=null) {
            for(int i=0; i<items.size();i++) {
                String title = BS.searchTitleByISBN(items.get(i).getBookISBN());
                String barcode = items.get(i).getBarcode();
                Boolean status = items.get(i).getStatus();
                String available = "NOT AVAILABLE";
                if (!status) available = "AVAILABLE";
                String tabData[] = {barcode,title,available};
                DefaultTableModel tblModel = (DefaultTableModel) itemsTAB.getModel();
                tblModel.addRow(tabData);
            }
        }
    }//GEN-LAST:event_barcodeFilterKeyReleased

    private void titleFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleFilterKeyReleased
        itemsTAB.setModel(new DefaultTableModel(null,new String[]{"BARCODE","TITLE","STATUS"}));
        BookItemService BIS = new BookItemService();
        BookService BS = new BookService();
        ArrayList<BookItem> items = BIS.searchBookItemsbyTitle(titleFilter.getText());
        if(items!=null) {
            for(int i=0; i<items.size();i++) {
                String title = BS.searchTitleByISBN(items.get(i).getBookISBN());
                String barcode = items.get(i).getBarcode();
                Boolean status = items.get(i).getStatus();
                String available = "NOT AVAILABLE";
                if (!status) available = "AVAILABLE";
                String tabData[] = {barcode,title,available};
                DefaultTableModel tblModel = (DefaultTableModel) itemsTAB.getModel();
                tblModel.addRow(tabData);
            }
        }
    }//GEN-LAST:event_titleFilterKeyReleased

    private void itemsTABMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTABMouseClicked
        int row = itemsTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)itemsTAB.getModel();
        if (model.getValueAt(row, 2).toString().toLowerCase().equals("available")) {
            barcodeITEM.setText(model.getValueAt(row, 0).toString());
        }
        else
            barcodeITEM.setText("");
    }//GEN-LAST:event_itemsTABMouseClicked

    private void itemsTABKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsTABKeyReleased
        int row = itemsTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)itemsTAB.getModel();
        if (model.getValueAt(row, 2).toString().toLowerCase().equals("available")) {
            barcodeITEM.setText(model.getValueAt(row, 0).toString());
        }
        else
            barcodeITEM.setText("");
    }//GEN-LAST:event_itemsTABKeyReleased

    private void membersTABKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membersTABKeyReleased
        int row = membersTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)membersTAB.getModel();
        memberID.setText(model.getValueAt(row, 0).toString());
    }//GEN-LAST:event_membersTABKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if((memberID.getText().equals(""))&&(!barcodeITEM.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You must select an account !","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        else if((!memberID.getText().equals(""))&&(barcodeITEM.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You must select a book item !","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        
        else if((memberID.getText().equals(""))&&(barcodeITEM.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You must select an account and a book item !","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        else {
            BookLendingService BLS = new BookLendingService();
            AccountService AS = new AccountService();
            BookItemService BIS = new BookItemService();
            boolean added = BLS.addBookLending(Integer.parseInt(daysINPUT.getText()), AS.getAccountbyId(Integer.parseInt(memberID.getText())), BIS.getBookItembyBarcode(barcodeITEM.getText()));
            if(added)
                JOptionPane.showMessageDialog(null, "The lending is added successfully !","ADDED SUCCESSFULLY",JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            BookLending obj = new BookLending();
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void daysINPUTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daysINPUTKeyTyped
        char keyChar = evt.getKeyChar();
        // Check if the key is a number (0-9) or backspace
        if (Character.isDigit(keyChar) || keyChar == KeyEvent.VK_BACK_SPACE) {
            // Allow the key to be processed normally
        } else {
            evt.consume();
        }  
    }//GEN-LAST:event_daysINPUTKeyTyped

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.setVisible(false);
        LibrarianMenu obj = new LibrarianMenu();
        obj.setVisible(true);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CompletableFuture<Integer> future = CompletableFuture.supplyAsync(() -> {
            // Simulate a long-running asynchronous task
            try {
                Barcode_Scanner.barcodeResult =null;
                Barcode_Scanner.startScanning();
                while(true) {
                    String result = Barcode_Scanner.barcodeResult;
                    sleep(100);
                    if (result!=null) {
                        //traitement ................................
                        LibraryCardService LCS = new LibraryCardService();
                        int ac_id = LCS.getLibraryCardAccountId(result);
                        if(ac_id==0) {
                            JOptionPane.showMessageDialog(null,"LIBRARY CARD BARCODE DOESN'T EXIST");
                            DefaultTableModel model = (DefaultTableModel)membersTAB.getModel();
                            model.setRowCount(0);
                            Barcode_Scanner.scanningThread.interrupt();
                        }
                        else {
                            AccountService AS = new AccountService();
                            Account ac = AS.getAccountbyId(ac_id);
                            JOptionPane.showMessageDialog(null,"ACCOUNT ID : "+String.valueOf(ac_id)+"\nUSERNAME : "+ac.getUsername()+"\nEMAIL : "+ac.getEmail()+"\nDATE OF CREATION : \n"+ac.getDateOfCreation());
                            AccountScanned(AS.getScannedAccount(ac_id));
                            memberID.setText(String.valueOf(ac_id));
                            Barcode_Scanner.scanningThread.interrupt();
                        }
                        //...........................................
                        //...........................................
                        break;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return 0;
        });
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CompletableFuture<Integer> future = CompletableFuture.supplyAsync(() -> {
            // Simulate a long-running asynchronous task
            try {
                Barcode_Scanner.barcodeResult =null;
                Barcode_Scanner.startScanning();
                while(true) {
                    String result = Barcode_Scanner.barcodeResult;
                    sleep(100);
                    if (result!=null) {
                        //traitement ................................
                        BookItemService BIS = new BookItemService();
                        BookService BS = new BookService();
                        AuthorService AS = new AuthorService();
                        BookItem bi = BIS.getBookItembyBarcode(result);
                        if(bi==null) {
                            JOptionPane.showMessageDialog(null,"BOOK ITEMS BARCODE DOESN'T EXIST\n"+result);
                            DefaultTableModel model = (DefaultTableModel)itemsTAB.getModel();
                            model.setRowCount(0);
                            Barcode_Scanner.scanningThread.interrupt();
                        }
                        else {
                            JOptionPane.showMessageDialog(null,"BARCODE : "+bi.getBarcode()+"\nISBN : "+bi.getBookISBN()+"\nTITLE : "+BS.getBookbyISBN(bi.getBookISBN()).getTitle()+"\nAUTHOR :"+AS.getAuthorbyID(BS.getBookbyISBN(bi.getBookISBN()).getAuthorID()).getFullname());
                            String status;
                            if(!bi.getStatus()){ status = "AVAILABLE";barcodeITEM.setText(bi.getBarcode());}
                            else status= "UNAVAILABLE";
                            BookItemScanned(bi.getBarcode(),BS.getBookbyISBN(bi.getBookISBN()).getTitle(),status);
                            Barcode_Scanner.scanningThread.interrupt();
                        }
                        //...........................................
                        //...........................................
                        break;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return 0;
        });
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodeFilter;
    private javax.swing.JTextField barcodeITEM;
    private javax.swing.JTextField daysINPUT;
    private javax.swing.JTextField emailFilter;
    private javax.swing.JTable itemsTAB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField memberID;
    private javax.swing.JTable membersTAB;
    private javax.swing.JTextField titleFilter;
    private javax.swing.JTextField usernameFilter;
    // End of variables declaration//GEN-END:variables
}
