/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package biblio;

import Entities.Account;
import Entities.BookItem;
import Services.AccountService;
import Services.BookItemService;
import Services.BookLendingService;
import Services.BookService;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class BookLending extends javax.swing.JFrame {

    /**
     * Creates new form BookLending
     */
    public BookLending() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        membersTAB = new javax.swing.JTable();
        memberID = new javax.swing.JTextField();
        usernameFilter = new javax.swing.JTextField();
        emailFilter = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTAB = new javax.swing.JTable();
        barcodeFilter = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        titleFilter = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        barcodeITEM = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        daysINPUT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        membersTAB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "USERNAME", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membersTAB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membersTABMouseClicked(evt);
            }
        });
        membersTAB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                membersTABKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(membersTAB);

        memberID.setEditable(false);
        memberID.setBackground(new java.awt.Color(255, 204, 204));
        memberID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        memberID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        usernameFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameFilterKeyReleased(evt);
            }
        });

        emailFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailFilterKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Username");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Email");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 102, 0));
        jLabel1.setText("MEMBER ID");

        itemsTAB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BARCODE", "TITLE", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemsTAB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTABMouseClicked(evt);
            }
        });
        itemsTAB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsTABKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(itemsTAB);

        barcodeFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barcodeFilterKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BARCODE");

        titleFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titleFilterKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TITLE");

        barcodeITEM.setEditable(false);
        barcodeITEM.setBackground(new java.awt.Color(255, 204, 204));
        barcodeITEM.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        barcodeITEM.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 102, 0));
        jLabel6.setText("BARCODE");

        jButton1.setText("CONFIRM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/biblio/assets/book.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 204));
        jLabel8.setText("NEW LENDING");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/biblio/assets/back.png"))); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 102, 0));
        jLabel10.setText("NUMBER OF DAYS");

        daysINPUT.setBackground(new java.awt.Color(231, 231, 231));
        daysINPUT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        daysINPUT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        daysINPUT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                daysINPUTKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memberID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(99, 99, 99)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(barcodeITEM, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(238, 238, 238)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(289, 289, 289)
                                .addComponent(jLabel7)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(usernameFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(emailFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(126, 126, 126))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(156, 156, 156)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23))
                                    .addComponent(barcodeFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titleFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(364, 364, 364)
                                .addComponent(daysINPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28))
                    .addComponent(barcodeFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(barcodeITEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(memberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(daysINPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            AccountService AS = new AccountService();
            ArrayList<Account> members = AS.getAllMembers();
            if(members!=null) {
                for(int i=0; i<members.size();i++) {
                    String id = String.valueOf(members.get(i).getId());
                    String username = members.get(i).getUsername();
                    String email = members.get(i).getEmail();
                    String tabData[] = {id,username,email};
                    DefaultTableModel tblModel = (DefaultTableModel) membersTAB.getModel();
                    tblModel.addRow(tabData);
                }
            }
            
            BookItemService BIS = new BookItemService();
            BookService BS = new BookService();
            ArrayList<BookItem> items = BIS.getAllBookItems();
            if(items!=null) {
                for(int i=0; i<items.size();i++) {
                    String title = BS.searchTitleByISBN(items.get(i).getBookISBN());
                    String barcode = items.get(i).getBarcode();
                    Boolean status = items.get(i).getStatus();
                    String available = "NOT AVAILABLE";
                    if (!status) available = "AVAILABLE";
                    String tabData[] = {barcode,title,available};
                    DefaultTableModel tblModel = (DefaultTableModel) itemsTAB.getModel();
                    tblModel.addRow(tabData);
                }
            }
        }
        catch(Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void membersTABMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membersTABMouseClicked
        // TODO add your handling code here:
        int row = membersTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)membersTAB.getModel();
        memberID.setText(model.getValueAt(row, 0).toString());
    }//GEN-LAST:event_membersTABMouseClicked

    private void usernameFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameFilterKeyReleased

        try {
            membersTAB.setModel(new DefaultTableModel(null,new String[]{"ID","USERNAME","EMAIL"}));
            DefaultTableModel tblModel = (DefaultTableModel) membersTAB.getModel();
            AccountService AS = new AccountService();
            ArrayList<Account> members = AS.searchAccountByUsername(usernameFilter.getText());
                for(int i=0; i<members.size();i++) {
                    String id = String.valueOf(members.get(i).getId());
                    String username = members.get(i).getUsername();
                    String email = members.get(i).getEmail();
                    String tabData[] = {id,username,email};
                    tblModel.addRow(tabData);
                }
        }
        catch(Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_usernameFilterKeyReleased

    private void emailFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailFilterKeyReleased
        // TODO add your handling code here:
        try {
            membersTAB.setModel(new DefaultTableModel(null,new String[]{"ID","USERNAME","EMAIL"}));
            DefaultTableModel tblModel = (DefaultTableModel) membersTAB.getModel();
            AccountService AS = new AccountService();
            ArrayList<Account> members = AS.searchAccountByEmail(emailFilter.getText());
                for(int i=0; i<members.size();i++) {
                    String id = String.valueOf(members.get(i).getId());
                    String username = members.get(i).getUsername();
                    String email = members.get(i).getEmail();
                    String tabData[] = {id,username,email};
                    tblModel.addRow(tabData);
                }
        }
        catch(Exception e) {
                e.printStackTrace();
        }
    }//GEN-LAST:event_emailFilterKeyReleased

    private void barcodeFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeFilterKeyReleased
        // TODO add your handling code here:
        itemsTAB.setModel(new DefaultTableModel(null,new String[]{"BARCODE","TITLE","STATUS"}));
        BookItemService BIS = new BookItemService();
        BookService BS = new BookService();
        ArrayList<BookItem> items = BIS.searchBookItemsbyBarcode(barcodeFilter.getText());
        if(items!=null) {
            for(int i=0; i<items.size();i++) {
                String title = BS.searchTitleByISBN(items.get(i).getBookISBN());
                String barcode = items.get(i).getBarcode();
                Boolean status = items.get(i).getStatus();
                String available = "NOT AVAILABLE";
                if (!status) available = "AVAILABLE";
                String tabData[] = {barcode,title,available};
                DefaultTableModel tblModel = (DefaultTableModel) itemsTAB.getModel();
                tblModel.addRow(tabData);
            }
        }
    }//GEN-LAST:event_barcodeFilterKeyReleased

    private void titleFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleFilterKeyReleased
        itemsTAB.setModel(new DefaultTableModel(null,new String[]{"BARCODE","TITLE","STATUS"}));
        BookItemService BIS = new BookItemService();
        BookService BS = new BookService();
        ArrayList<BookItem> items = BIS.searchBookItemsbyTitle(titleFilter.getText());
        if(items!=null) {
            for(int i=0; i<items.size();i++) {
                String title = BS.searchTitleByISBN(items.get(i).getBookISBN());
                String barcode = items.get(i).getBarcode();
                Boolean status = items.get(i).getStatus();
                String available = "NOT AVAILABLE";
                if (!status) available = "AVAILABLE";
                String tabData[] = {barcode,title,available};
                DefaultTableModel tblModel = (DefaultTableModel) itemsTAB.getModel();
                tblModel.addRow(tabData);
            }
        }
    }//GEN-LAST:event_titleFilterKeyReleased

    private void itemsTABMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTABMouseClicked
        int row = itemsTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)itemsTAB.getModel();
        if (model.getValueAt(row, 2).toString().toLowerCase().equals("available")) {
            barcodeITEM.setText(model.getValueAt(row, 0).toString());
        }
        else
            barcodeITEM.setText("");
    }//GEN-LAST:event_itemsTABMouseClicked

    private void itemsTABKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsTABKeyReleased
        int row = itemsTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)itemsTAB.getModel();
        if (model.getValueAt(row, 2).toString().toLowerCase().equals("available")) {
            barcodeITEM.setText(model.getValueAt(row, 0).toString());
        }
        else
            barcodeITEM.setText("");
    }//GEN-LAST:event_itemsTABKeyReleased

    private void membersTABKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membersTABKeyReleased
        int row = membersTAB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)membersTAB.getModel();
        memberID.setText(model.getValueAt(row, 0).toString());
    }//GEN-LAST:event_membersTABKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if((memberID.getText().equals(""))&&(!barcodeITEM.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You must select an account !","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        else if((!memberID.getText().equals(""))&&(barcodeITEM.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You must select a book item !","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        
        else if((memberID.getText().equals(""))&&(barcodeITEM.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "You must select an account and a book item !","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        else {
            BookLendingService BLS = new BookLendingService();
            AccountService AS = new AccountService();
            BookItemService BIS = new BookItemService();
            boolean added = BLS.addBookLending(Integer.parseInt(daysINPUT.getText()), AS.getAccountbyId(Integer.parseInt(memberID.getText())), BIS.getBookItembyBarcode(barcodeITEM.getText()));
            if(added)
                JOptionPane.showMessageDialog(null, "The lending is added successfully !","ADDED SUCCESSFULLY",JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            BookLending obj = new BookLending();
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void daysINPUTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daysINPUTKeyTyped
        char keyChar = evt.getKeyChar();
        // Check if the key is a number (0-9) or backspace
        if (Character.isDigit(keyChar) || keyChar == KeyEvent.VK_BACK_SPACE) {
            // Allow the key to be processed normally
        } else {
            evt.consume();
        }  
    }//GEN-LAST:event_daysINPUTKeyTyped

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodeFilter;
    private javax.swing.JTextField barcodeITEM;
    private javax.swing.JTextField daysINPUT;
    private javax.swing.JTextField emailFilter;
    private javax.swing.JTable itemsTAB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField memberID;
    private javax.swing.JTable membersTAB;
    private javax.swing.JTextField titleFilter;
    private javax.swing.JTextField usernameFilter;
    // End of variables declaration//GEN-END:variables
}
